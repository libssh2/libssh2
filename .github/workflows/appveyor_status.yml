# Copyright (C) Marc Hoersken
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# SPDX-License-Identifier: BSD-3-Clause

name: 'AppVeyor Status Report'

'on':
  status

concurrency:
  group: ${{ github.workflow }}-${{ github.event.sha }}-${{ github.event.target_url }}
  cancel-in-progress: true

permissions: {}

jobs:
  split:
    name: 'split'
    runs-on: ubuntu-latest
    if: ${{ github.event.sender.login == 'appveyor[bot]' }}
    permissions:
      statuses: write
    steps:
      - name: 'Create individual AppVeyor build statuses'
        if: ${{ github.event.sha && github.event.target_url }}
        env:
          APPVEYOR_COMMIT_SHA: ${{ github.event.sha }}
          APPVEYOR_TARGET_URL: ${{ github.event.target_url }}
          APPVEYOR_REPOSITORY: ${{ github.event.repository.full_name }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${APPVEYOR_TARGET_URL}" | sed 's/\/project\//\/api\/projects\//' | xargs -t -n1 curl -s | \
            jq -c '.build.jobs[] | {target_url: ($target_url + "/job/" + .jobId),
                                    context: (.name | sub("^(Environment: )?"; "AppVeyor / ")),
                                    state: (.status | sub("queued"; "pending")
                                                    | sub("starting"; "pending")
                                                    | sub("running"; "pending")
                                                    | sub("failed"; "failure")
                                                    | sub("cancelled"; "error")),
                                    description: .status}' \
                --arg target_url "${APPVEYOR_TARGET_URL}" | tee /dev/stderr | parallel --pipe -j 1 -N 1 \
              gh api --silent --input - "repos/${APPVEYOR_REPOSITORY}/statuses/${APPVEYOR_COMMIT_SHA}"
